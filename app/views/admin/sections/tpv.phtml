<?php namespace app\views\components\controllers;?>
<section id="tpv">
    <?php
        $table = new Table(['columns'=>['C贸digo', 'Descripci贸n', 'Cantidad', 'Precio', 'Dto', 'Importe'], 
        'class'=>'hoverable', 'onclick'=>'tpv.loadLineFromTable(window.event)']);
        $id = new InputRead(['value' => $tickets_new_id, 'label' => 'Id'],  false);
        $hour = new InputRead(['value' => $tickets_hora, 'label' => 'Hora', 'class' => 'clock'],  false);
        $emp = new Select(['label' => 'Operador', 'required' => true, 'options' => $Employees->getArray('nombre'), 'tabindex'=>1], false);
        $cli = new Select(['label' => 'Cliente', 'options' => $Users->getArray('nombre'), 'tabindex'=>2], false);
        
        // Linea
        $code = new Select(['label' => 'Codigo', 'name' => 'servicio', 'required' => true, 'class'=>'keyEnterOut', 
            'options' => $Services->getArray('codigo'), 'tabindex'=>3, 'onblur'=>'tpv.loadLine()'], false);
        $des = new InputText(['label' => 'Desctipcion','tabindex'=>4, 'class'=>'keyEnterOut'],  false);
        $quan = new InputNumber(['label' => 'Cantidad', 'tabindex'=>5, 'value'=>'1', 'onblur'=>'tpv.calculate()', 'class'=>'keyEnterOut'], false);
        $pric = new InputNumber(['label' => 'Precio', 'tabindex'=>6, 'value'=>'0', 'onblur'=>'tpv.calculate()', 'class'=>'keyEnterOut'], false);
        $dto = new InputNumber(['label' => 'Dto %', 'tabindex'=>7,'value'=>'0', 'onblur'=>'tpv.calculate()', 'class'=>'keyEnterOut'], false);
        $amo = new InputRead(['id' => 'amount', 'label' => 'Importe', 'value'=>'0'], false);
        $btnOk = new ButtonSuccess(['tabindex'=>8, 'onclick'=>'tpv.addLine()','class'=>'keyEnterOut']);
        $btnClear = new ButtonCancel(['caption'=> '', 'onclick'=>'tpv.clearLine()', 'icon' => 'cross']);

        $txtTotal = new InputRead(['value' => 0, 'label' => 'Total'], false);
        $btnTicket = new ButtonSuccess(['onclick'=>'tpv.create()', 'caption'=>'Ticket']);
        ?> 
     
</section> 
<section id="auxiliar">
    <?php
        $modTicket = new Modal(['body'=> \VIEWS\ADMIN\SECTIONS . 'ticket.phtml'], false, $Company);
    ?>
</section>
<style>
    #tpv{
        align-items: flex-start;
        display: grid;
        grid-template-rows: auto [table] 400px auto auto auto;
        grid-template-columns: [first] 10rem 1fr 1fr 6rem 6rem  6rem  [prelast] 8rem [last] 2rem;
        grid-row-gap: 5px;
    }
    #tpv table:not(.horizontal) thead{
        height: 60px;
    }
    #tpv * {
        font-size: 0.8rem;
    }
    #tpv table{
        grid-row: table;
        grid-column: 1/-1;
    }
    #tpv #<?= $id->id() ?>{
        grid-area: 1/1;
    }
    #tpv #<?= $hour->id() ?>{
        grid-row: 1;
        grid-column: prelast;
    }
    #tpv #<?= $code->id() ?>{
        grid-area: 3/1;
    }
    #tpv #<?= $des->id() ?>{
        grid-row: 3;
        grid-column: 2 / span 2;
    }
    #tpv #<?= $emp->id() ?>{
        grid-area: 1/2;
    }
    #tpv #<?= $cli->id() ?>{
        grid-area: 1/3;
    }
    #tpv #<?= $quan->id() ?>{
        grid-area: 3/4;
    }
    #tpv #<?= $pric->id() ?>{
        grid-area: 3/5;
    }
    #tpv #<?= $dto->id() ?>{
        grid-area: 3/6;
    }
    #tpv #<?= $amo->id() ?>{
        grid-row: 3;
        grid-column: prelast;
    }
    /* TXT TOTAL */
    #tpv #<?= $txtTotal->id() ?>{
        grid-row: 5;
        grid-column: first;
        transform: translateY(-15px);
    }
    #tpv #<?= $txtTotal->id()?> input{
        font-size: 1.2rem;
        transform: translateY(15px);
        font-weight: 900; 
    }
    #tpv #<?= $txtTotal->id()?> label{
        font-size: 1.2rem;
        color: var(--fore-color);   
    }
    #tpv #<?= $btnTicket->id() ?>{
        grid-row: 5;
        grid-column: prelast / span 2 ;
    }
    #tpv .Importe{
        text-align: right;
    }
    #tpv #<?= $btnOk->id() ?>{
        grid-row: 4;
        grid-column: prelast / span 2;
    }
    #tpv #<?= $btnClear->id() ?>{
        grid-row: 3;
        grid-column: last;
    }
    #<?=$modTicket->idEl()?>{
        max-height: 80vh;
    }
</style>
<script src="js/Line.min.js"></script>
<script src="js/Ticket.min.js"></script>
<script>
    var tpv = {
        buttons: ['prev', 'next','del'],
        total: 0,
        currentId: <?=$tickets_new_id?>,
        Ticket : new Ticket(),
        $id : $('#<?=$id->idEl()?>'), 
        $table : $('#<?=$table->idEl()?>').find('tbody'), 
        $code :  $('#<?=$code->idEl()?>'),
        $description : $('#<?=$des->idEl()?>'),
        $employees : $('#<?=$emp->idEl()?>'),
        $client : $('#<?=$cli->idEl()?>'),
        $hour : $('#<?=$hour->idEl()?>'),
        $quantity : $('#<?=$quan->idEl()?>'),
        $price : $('#<?=$pric->idEl()?>'),
        $dto : $('#<?=$dto->idEl()?>'),
        $amount : $('#<?=$amo->idEl()?>'),
        $btnOk : $('#<?=$btnOk->idEl()?>'),
        $btnClear : $('#<?=$btnClear->idEl()?>'),
        $total : $('#<?=$txtTotal->idEl()?>'),
        $switch : $('#control_<?=$modTicket->id()?>'),
        load(){
            this.$employees.focus()
        },
        open(){
            this.$switch.prop('checked',true)
            ticket.open(tpv.Ticket)
        },
        close(){
            this.$switch.prop('checked',false)
        },
        reset(){
            this.Ticket = new Ticket()
            this.clearLine()
            this.clearLines()
            this.clearUsers()
            this.printTotal()
            this.close()
        },
        // Cargamos un Ticket con los datos introducidos por el usuario
        create(){
            this.Ticket.id_empleado =this.$employees.val()
            this.Ticket.employee_name = this.$employees.find(':selected').text()
            this.Ticket.id_cliente = this.$client.val()
            this.Ticket.client_name = this.$client.find(':selected').text()
            this.Ticket.fecha = new Date
            this.Ticket.id = this.$id.val()

            if(this.Ticket.validate())
                this.open()
            else 
                mns.error('Faltan datos para crear el ticket')

        },
        calculate(){
            let amount = this.$quantity.val() * this.$price.val(), 
                dto = this.$dto.val() * amount / 100, 
                total = amount - dto
            this.$amount.val(total)
        },
        clearLine(){
            this.$code.val('')
            this.$description.val('')
            this.$quantity.val(1)
            this.$price.val(0)
            this.$amount.val(0)
            this.$code.focus()
        },
        clearLines(){
            this.$table.find('tr').remove()
        },
        clearUsers(){
            this.$client.val('')
            this.$employees.val('').focus()
        },
        printTotal(){
            this.total = this.Ticket.total()
            this.$total.val(this.total)
        },
        addLine(){
            this.calculate()
            
            var line = this.Ticket.addLine(
                this.$code.val(), 
                this.$description.val(), 
                this.$quantity.val(), 
                this.$price.val(), 
                this.$dto.val(), 
                this.$amount.val()
            )
            // Validamos los datos e ingresamos en la tabla
            if(line.success) this.addLineTable(line.id, line.articulo, line.des, line.cantidad, line.precio, line.dto, line.amo)
            else  this.$code.focus()
        },
        addLineTable(id, articulo, des, cantidad, precio, dto, amo){
            
            const $template = $( $('#template_<?=$table->id()?>')[0].innerHTML )
            $template
                .attr('idline', id)
                .find('.C贸digo').html(articulo).end()
                .find('.Descripci贸n').html(des).end()
                .find('.Cantidad').html(cantidad).end()
                .find('.Precio').html(precio).end()
                .find('.Dto').html(dto).end()
                .find('.Importe').html(amo).end()
        
            this.$table.append($template) 
            this.clearLine()
            this.printTotal()
            // Scroll al final
            this.$table.animate({ scrollTop: this.$table.height() }, 100);
        },  
        loadLine(){
            let code = this.$code.find(':selected').text()
            if(app.data.services[code]){
                this.$description.val(app.data.services[code]['descripcion'])
                this.$price.val(app.data.services[code]['precio'])
            }
        },
        loadLineFromTable(e){
            // Eliminamos la linea del objeto
            let line = this.Ticket.deleteLine(e.path[1].attributes.idline.value)[0]

            // Vista
            this.$code.val(line.articulo)
            this.$description.val(line.des)
            this.$quantity.val(line.cantidad)
            this.$price.val(line.precio)
            this.$dto.val(line.dto)
            this.$amount.val(line.amo)

            this.$table.find('[idline="'+e.path[1].attributes.idline.value+'"]').remove()
            
            this.printTotal()
        },
        del(){
            alert('eliminar ticket')
        },
        next(){

        },
        prev(){
            let id = this.currentId - 1
            this.getTicket(id)
        },
        getTicket(id){
            let self = this
            data = {
                controller: 'tickets', 
                action: 'get',
                data: {
                    id: id
                }
            }
            app.post(data, function(respond){
                self.loadDataToForm(respond)
            })
        },
        loadDataToForm( Ticket ){
            let arrdate = Ticket.fecha.split(' ')

            this.$id.val(Ticket.id) 
            this.$employees.find('[value='+Ticket.id_empleado+']').attr("selected", true)
            this.$client.find('[value='+Ticket.id_cliente+']').attr("selected", true)
            this.$hour.val(arrdate[1].substr(0,5))
            app.loadDate(arrdate[0])

            for(let i in Ticket.lines){
                var line = Ticket.lines[i]
                this.addLineTable(line.id, line.articulo, line.des, line.cantidad, line.precio, line.dto, line.amo)
            }

        }
    }
</script>

