// Clase que almacena los datos y actualiza si se modifica la variable

class Data {
    constructor(data){
       // Alemacen de datos
        this.storage = data; 
        // Crear un nuevo hilo para este proceso de datos    ç

        this.create();   
    }
    // Contenido del worker 
    content(){
        return `
            let array = [];  
            // Al recibir un mensaje se ejecuta
            self.addEventListener('message', e => {
                

                
                let a = array; 
                array = e.data;

                // y se realiza la comparación de cada elemento
                self.postMessage( [respond, e.data, a] );  
            }, false);

            function init ( arr ){
                let switch = true; 
                while(switch){
                    if(){

                    }
                }
            }
        `;
    }
    // Crea el worker y maneja la respuesta
    create(){
        //Crea el archivo worker en tiempo de ejecución
        this.blob = new Blob([this.content()], { type: "text/javascript" });
        // Creamos el hilo
        this.worker = new Worker(window.URL.createObjectURL(this.blob));
        // Que hace al recibir el mensaje
        this.worker.onmessage = function (event) {
            console.log(event.data);
        };
    }
    // Envia datos al worker 
    send(d){
        // Permite mandar mensajes al Worker
        this.worker.postMessage(this.storage);
    }
    // Añade un dato al almacen
    add( el ){
        this.storage.push( el ); 
    }
    // Añada y devuelve los datos al almacen
    data( param = null ){
        if(param) this.storage.push(param);
        return this.storage; 
    }   
    // Elimine los datos del almacen
    del(){

    }
    // Actualice los datos de la web
    refresh(){

    }

}