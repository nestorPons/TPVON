<?php namespace app\controllers\components?><section id="control">
    <?php
    $txt01 = new InputText(['label' => 'Ticket']);
    $txt02 = new InputText(['label' => 'Cliente']);
    $table = new Table([
        'columns' => ['id_linea', 'Nombre', 'Descripcion', 'fecha'],
        'class' => 'hoverable', 'ondblclick' => 'app.control.addDate(event.target)'
    ]);
    ?>
</section>
<style lang="less">
    #control{display:grid;grid-template-columns:1fr 1fr}#control table{grid-column:1 / span 2}#control .fecha{text-align:center}#control .lnr{cursor:pointer;text-align:center;margin:auto}#control .lnr:hover{border-radius:25px}#control .lnr.lnr-cross-circle{color:red}#control .lnr.lnr-cross-circle:hover{background-color:red;color:#fff}#control .lnr.lnr-plus-circle{color:green}#control .lnr.lnr-plus-circle:hover{background-color:green;color:#fff}
</style>
<script>
    app.control = {
        table: 'control',
        buttons: ['prev', 'next', 'search', 'print'],
        Table: new Table('<?= $table->idEl() ?>'),
        txtTicket: <?= $txt01->idEl() ?>,
        txtCli: <?= $txt02->idEl() ?>,
        btnDel: ' <span class="lnr lnr-cross-circle" onclick="app.control.delDate(event.target)"></span>',
        btnAdd: ' <span class="lnr lnr-plus-circle" onclick="app.control.addDate(event.target)"></span>',
        load() {

            this.db = DB
            this.db.table = this.table
            app.post({
                controller: this.table,
                action: 'get',
                data: {}
            }, data => {
                DB.set(this.table, data)
                    .then(_ => this.db.last())
                    .then(lst => {
                        this.loadTable(lst);
                    });
            })
        },
        // Impresion de los vales regalo
        print(){
            // Comprobamos que este cargado el mÃ³dulo del vale regalo
            if(app.present) {
                imprimirElemento(app.present.el, app.present.style)
            } else {
                // Si no esta cargado lo cargamos pero no lo mostramos
                app.get({
                    controller : 'present', 
                    action  : 'view',
                    data: {}
                }, false, html => {
                    // Obtenemos el id del elemento
                    let h = document.createElement('div')
                    h.innerHTML = html
                    let el = h.getElementsByTagName('component')[0]
                    // Cargamos la clase
                    app.present = new Present(el.id)
                    this.print()
                })
            }
        },
        add(data) {
            this.db.lastId()
                .then(id => this.db.set(data, 'id', id + 1));
        },
        getTicket(action){
            app.post({
                controller  : this.table,
                action      : action,
                data        : {
                    id      : (this.txtTicket.value)
                }
            }, (data, status) => {
                if(status) this.loadTable(data);
            });
        },
        next() {
            this.getTicket('next');
        },
        prev() {
            this.getTicket('prev');
        },
        loadTable(data) {

            if (data == undefined) return false;
            this.Table.clear();

            this.txtTicket.value = data.id;

            DB.get('usuarios', 'id', data.id_cliente)
                .then(d => d[0])
                .then(({
                    nombre
                }) => this.txtCli.value = nombre);

            for (let i in data.lines) {
                let line = data.lines[i]
                DB.get('servicios', 'id', line.articulo)
                    .then(d => d[0])
                    .then(ser => {
                        let date = (line.fecha_regalo != null) ? app.date.format(line.fecha_regalo, 'datetime') + this.btnDel : this.btnAdd

                        this.Table.addLine(
                            line.id,
                            [line.id, ser.nombre, ser.descripcion, date]
                        )
                    })
            }
        },
        search(value) {
            if (!isNaN(value)) {
                DB.get(this.table, 'id', value)
                    .then(d => d[0])
                    .then(d => {
                        if (d != undefined) this.loadTable(d)
                        else app.mens.error('No se ha podido encontrar el registro')
                    })
            } else {
                echo('AKI:: Funcion no definida')
            }
        },
        addDate(e) {
            let $el = $(e),
                $parent = $el.parents('tr'),
                id = $parent.attr('idline'),
                date = app.date.format(app.date.now(), 'datetime')

            app.post({
                controller: 'control',
                action: 'addDate',
                data: {
                    id_linea: id,
                    fecha: date
                }
            }, d => {
                $el.parents('tr').find('.fecha').html(date + this.btnDel)
            })
        },
        delDate(e) {
            let $el = $(e),
                $parent = $el.parents('tr'),
                id = $parent.attr('idline')
            app.post({
                controller: 'control',
                action: 'delete',
                data: {
                    id_linea: id
                }
            }, d => {
                $el.parent().html(this.btnAdd)
            })
        },
    }
</script>