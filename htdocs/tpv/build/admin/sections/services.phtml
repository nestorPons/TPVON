<?php namespace app\controllers\components?><section id="services">
    <?php
    $table = new Table(['columns'=>['id', 'Código', 'Nombre', 'Descripcion', 'Precio'], 'class'=>'hoverable', 
    'onclick'=>'app.services.show(window.event)']);
    $abc = new ListABC($table->id());
    $form = new Modal(['body'=> \VIEWS\ADMIN\SECTIONS . 'forms/service.phtml'], false);
    ?>

</section>
<style lang="less">#services{height:100%;display:grid;grid-template-rows:auto 1fr}#services #<?=$table->id()?>{max-height:100%;grid-row:2}</style>
<script>'use strict'
app.services={name:'Servicios',table:'servicios',buttons:['add','search'],currentId:null,Table:new Table('<?=$table->id()?>'),Form:new Modal('<?=$form->id()?>'),$table:$('#<?=$table->id()?>').find('tbody'),async valCode(e){const el=e.target,value=el.value,ser=await DB.get('servicios','codigo',value).then(d=>d[0])
if(this.Form.state()=='new'){if(ser!=undefined)el.setCustomValidity("Codigo existente")
else el.setCustomValidity('')}else{if(ser&&this.Form.data.id!=ser.id)el.setCustomValidity("Codigo existente")
else el.setCustomValidity('')}},load(){this.selFam=new Select(this.Form.el.querySelector('[name="id_familia"]').parentNode)
DB.get(this.table).then(data=>{for(let i in data.reverse()){var d=data[i]
if(d.estado==1){this.Table.addLine(d.id,[d.id,d.codigo,d.nombre,d.descripcion,d.precio]).addClass(d.codigo[0].toLowerCase())}}})},async open(){const families=await DB.get('familias',null,null,'estado==1')
this.selFam.clear().addClass('valid')
for(let f of families){if(f)this.selFam.addOption(f.id,f.nombre)}},del(){DB.get(this.table,'id',this.currentId).then(d=>d[0]).then(d=>{d.estado=0
DB.set(this.table,d,'id',d.id)
this.Table.delLine(this.currentId)
this.Form.close()
app.tpv.loadServ()})},add(){let data={id:-1,estado:1}
this.Form.state('new').clear().open(data).setTile('Nuevo servicio')},addLine(data){this.Table.addLine(data.id,[data.id,data.codigo,data.nombre,data.descripcion,data.precio]).addClass(data.codigo[0].toLowerCase())
return this},updateLine(data){this.Table.updateLine(data.id,[data.id,data.codigo,data.nombre,data.descripcion,data.precio]).addClass(data.codigo[0].toLowerCase())
return this},async save(rsp){let data=await this.Form.getData(rsp)
data.estado=1
data={...data,...rsp}
DB.set(this.table,data,'id',data.id)
if(this.currentId==-1)this.addLine(data)
else this.updateLine(data)
this.Form.close()
app.tpv.loadServ()},show(e){this.currentId=e.path[1].attributes.idline.value
DB.get(this.table,'id',this.currentId).then(data=>this.Form.state('edit').open(data).setTile('Edición A/S'))},async search(value){this.Table.hideLines()
await this.searchBy('codigo',value)||await this.searchBy('nombre',value)||await this.searchBy('descripcion',value)},searchBy(field,value){DB.get(this.table,field,value,'estado==1').then(d=>{if(d){for(let i in d)this.Table.showLines(`[idline='${d[i].id}'`)
return!0}else return!1})}}</script>
