<?php namespace app\controllers\components?><section id="tpv">
    <?php
    $table  = new Table([
        'columns' => ['Código', 'Descripción', 'Unidades', 'Precio €', 'Dto %', 'Importe €'],
        'class' => 'hoverable', 'onclick' => 'app.tpv.loadLineFromTable(window.event)'
    ]);
    $id     = new InputRead(['label' => 'Id'],  false);
    $date   = new InputRead(['label' => 'Fecha']);
    $hour   = new InputRead(['label' => 'Hora', 'class' => 'clock'],  false);
    $emp    = new Select(['label' => 'Operador', 'required' => true, 'tabindex' => 1], false);
    $cli    = new Select(['label' => 'Cliente', 'tabindex' => 2, 'onchange' => 'app.tpv.loadClient()'], false);

    // Linea
    $code = new Select([
        'label' => 'Codigo', 'name' => 'servicio', 'required' => true, 'class' => 'keyEnterOut',
        'tabindex' => 3, 'onblur' => 'app.tpv.loadLine()'
    ], false);
    $des = new InputText(['label' => 'Desctipcion', 'tabindex' => 4, 'class' => 'keyEnterOut'],  false);
    $quan = new InputNumber(['label' => 'Cantidad', 'tabindex' => 5, 'value' => '1', 'onblur' => 'app.tpv.calculate()', 'class' => 'keyEnterOut'], false);
    $pric = new InputNumber(['label' => 'Precio', 'tabindex' => 6, 'value' => '0', 'onblur' => 'app.tpv.calculate()', 'class' => 'keyEnterOut'], false);
    $dto = new InputNumber(['label' => 'Dto %', 'tabindex' => 7, 'value' => '0', 'onblur' => 'app.tpv.calculate()', 'class' => 'keyEnterOut'], false);
    $amo = new InputRead(['id' => 'amount', 'label' => 'Importe', 'value' => '0'], false);
    $btnOk = new ButtonSuccess(['tabindex' => 8, 'onclick' => 'app.tpv.addLine()', 'class' => 'keyEnterOut']);
    $btnClear = new ButtonCancel(['caption' => false, 'onclick' => 'app.tpv.clearLine()', 'icon' => 'cross']);

    $txtTotal = new InputRead(['value' => '0', 'label' => 'Total'], false);
    $btnTicket = new ButtonSuccess(['onclick' => 'app.tpv.create()', 'caption' => 'Ticket']);

    $modTicket = new Modal(['body' => \VIEWS\ADMIN\SECTIONS . 'ticket.phtml'], false, $Company->data());
    ?>
</section>
<style>#tpv{align-items:flex-start;display:grid;grid-template-rows:auto 400px auto auto;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr 7rem 2rem;grid-row-gap:5px}#tpv table:not(.horizontal) thead{height:60px}#tpv #<?=$table->id() ?>{grid-row:2;grid-column-start:1;grid-column-end:-1}#tpv m-table table{height:initial}#tpv #<?=$id->id() ?>{grid-row:1;grid-column:1}#tpv #<?=$date->id() ?>{grid-row:1;grid-column:6;text-align:center}#tpv #<?=$hour->id() ?>{text-align:center;grid-row:1;grid-column:7}#tpv #<?=$code->id() ?>{grid-row:3;grid-column:1}#tpv #<?=$des->id() ?>{grid-row:3;grid-column:2 / span 2}#tpv #<?=$emp->id() ?>{grid-row:1;grid-column:2 / span 2}#tpv #<?=$cli->id() ?>{grid-row:1;grid-column:4 / span 2}#tpv #<?=$quan->id() ?>{grid-row:3;grid-column:4}#tpv #<?=$pric->id() ?>{grid-row:3;grid-column:5}#tpv #<?=$dto->id() ?>{grid-row:3;grid-column:6}#tpv #<?=$amo->id() ?>{grid-row:3;grid-column:7}#tpv .Descripción{flex-basis:25%}#tpv #<?=$txtTotal->id() ?>{grid-row:4;grid-column:1;transform:translate(15px,15px) scale(1.4);font-weight:700}#tpv #<?=$txtTotal->id() ?>input{font-size:1.2rem;transform:translateY(15px);font-weight:900}#tpv #<?=$txtTotal->id() ?>label{font-size:await .2rem;color:var(await-fore-color)}#tpv #<?=$btnTicket->id() ?>{grid-row:4;grid-column:5 / span 2}#tpv .Importe{text-align:right}#tpv #<?=$btnOk->id() ?>{grid-row:4;grid-column:7 / span 2}#tpv #<?=$btnClear->id() ?>{grid-row:3;grid-column:8}#<?=$modTicket->id() ?>{max-height:80vh}</style>
<script></script>
<script>app.tpv={name:'TPV',buttons:['add','prev','next','del','search'],total:0,client:null,currentId:<?=$tickets_new_id?>,lastId:<?=$tickets_new_id?>,Ticket:new Ticket(),Table:new Table('<?= $table->id() ?>'),Modal:new Modal('<?= $modTicket->id() ?>'),selCode:new Select(<?=$code->id()?>),selEmp:new Select(<?=$emp->id()?>),selCli:new Select(<?=$cli->id()?>),dto:<?=$dto->id()?>.querySelector('input'),amount:<?=$amo->id()?>.querySelector('input'),txtTotal:<?=$txtTotal->id()?>.querySelector('input'),txtId:<?=$id->id()?>.querySelector('input'),date:<?=$date->id()?>.querySelector('input'),hour:<?=$hour->id()?>.querySelector('input'),description:<?=$des->id()?>.querySelector('input'),quantity:<?=$quan->id()?>.querySelector('input'),price:<?=$pric->id()?>.querySelector('input'),open(){this.selEmp.el.focus()},loadClient(){this.client=new User(this.selCli.value())},load(){this.reset()
this.add()
this.loadUsers()
this.loadServ()},loadUsers(){this.selEmp.clear()
this.selCli.clear()
DB.get('usuarios','estado',1).then(users=>{for(let u of users){if(u.nivel>0)this.selEmp.addOption(u.id,u.nombre)
this.selCli.addOption(u.id,u.nombre)
if(u.codigo)this.selCli.addOption(u.id,u.codigo)}})},loadServ(){this.selCode.clear()
DB.get('servicios','estado',1).then(serv=>{for(s of serv){this.selCode.addOption(s.id,s.codigo)}})},openTicket(){this.Modal.open()
app.ticket.open(this.Ticket)},close(){this.Modal.close()},async reset(){DB.get('empresa').then(d=>{this.Ticket=new Ticket()
this.date.value=date.now('date')
this.hour.value=date.now('hour')
this.dto.value=0
this.selCli.value(0)
this.clearLine()
this.clearLines()
this.clearUsers()
this.printTotal()
this.Table.hoverable(!0)
this.close()})},async create(){this.Ticket.id_usuario=this.selEmp.value()
this.Ticket.id_cliente=this.selCli.value()
this.Ticket.fecha=new Date
this.Ticket.id=this.currentId
this.Ticket.iva=await DB.get('config').then(d=>d[0].iva)
if(this.Ticket.validate()){await this.loadClient()
this.openTicket()}else mns.error('Faltan datos para crear el ticket')},calculate(){let amount=this.quantity.value*this.price.value,dto=this.dto.value*amount/100,total=amount-dto
return this.amount.value=total.toFixed(2)},clearLine(){this.selCode.default()
this.description.value=''
this.quantity.value=1
this.price.value=0
this.amount.value=0},clearLines(){this.Table.clearLines()},clearUsers(){echo('ClearUsers...')
this.selCli.reset()
this.selEmp.reset()},printTotal(){this.total=this.Ticket.setTotal()
this.txtTotal.value=this.total},addLine(){this.calculate()
var line=this.Ticket.addLine(this.Table.line()+1,this.selCode.value(),this.quantity.value,this.price.value,this.dto.value)
if(line.articulo)
this.addLineTable(line.id,line.articulo,line.cantidad,line.precio,line.dto,line.amo)
else this.selCode.el.focus},addPromo(callback){if(this.client&&this.client.promos){DB.get('promos').then(d=>d[0]).then(promo=>{if(this.client.lastTicket&&promo&&date.diff(this.client.lastTicket,date.actual())<=promo.valor)this.dto.value=promo.dto
callback()})}else{callback()}},async addLineTable(id,idArticulo,cantidad,precio,dto,amo){const a=await DB.get('servicios','id',idArticulo)
this.Table.addLine(id,[a[0].codigo,a[0].descripcion,cantidad,precio,dto,amo||cantidad*precio*(1-dto/100)])
this.clearLine()
this.printTotal()},loadLine(){const id=this.selCode.value()
this.addPromo(_=>{if(id){DB.get('servicios','id',id).then(d=>d[0]).then(el=>{this.description.value=el.descripcion
this.price.value=el.precio
this.quantity.value=1
this.dto.value=0
this.calculate()})}})},loadLineFromTable(e){if(this.Table.hoverable()){const idLine=e.path[1].attributes.idline.value
let line=this.Ticket.getLine(idLine)
this.Ticket.deleteLine(idLine)
DB.get('servicios','id',line.articulo).then(d=>d[0]).then(d=>{this.selCode.option(line.articulo)
this.description.value=d.descripcion
this.quantity.value=line.cantidad
this.price.value=line.precio
this.dto.value=line.dto
this.amount.value=this.calculate()
this.Table.delLine(e.path[1].attributes.idline.value)
this.printTotal()})}},del(){this.request('del',this.currentId,(respond,status)=>this.next())},next(){this.request('next',this.currentId,(d,s)=>{if(s)this.loadDataTicket(d)
else this.add()})},prev(){this.request('prev',this.currentId,(d,s)=>{if(d)this.loadDataTicket(d)})},add(){this.request('last',this.currentId,d=>{let id=(d)?parseInt(d.id)+1:1
this.loadDataTicket({id:id,estado:1,id_usuario:0,id_cliente:0,fecha:date.current(),lines:[]})})},request(action,id,callback){let self=this,data={controller:'tickets',action:action,data:{id:id}}
app.post(data,function(d,s){typeof callback=='function'&&callback(d,s)},!1)},async loadDataTicket(data){let t=0
await this.reset()
this.Ticket=new Ticket(data)
if(data.lines.length>0)this.Ticket.new=!1
if(data.estado!=undefined){if(data.id_usuario)this.Table.hoverable(!1)
this.txtId.value=data.id
this.selEmp.option(data.id_usuario)
this.selCli.option(data.id_cliente)
this.total.value=this.Ticket.setTotal()
this.date.value=date.format(data.fecha,'short')
this.hour.value=date.format(data.fecha,'hour')
this.currentId=data.id
for(let line of data.lines){this.addLineTable(line.id,line.articulo,line.cantidad,line.precio,line.dto)}}else{this.txtId.value=this.currentId
return!1}},search(value){this.request('get',value,(d,s)=>{if(s)this.loadDataTicket(d)})},}
$(function(){app.tpv.load()})</script>