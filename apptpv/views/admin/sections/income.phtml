<section id="income">
    <m-input id="--id_txt1" type="date" label="De" tabindex="1"/>
    <m-input id="--id_txt2" type="date" label="Hasta" tabindex="2"/>
    <m-select id="--id_sel1" label="Usuario" tabindex="3" onchange="app.income.filter()" default="Todos" class="valid"/>
    <m-input id="--id_txt3" type="text" label="Total" readonly="true" class="text-right"/>
    <m-table id="--id_table1" columns="['Ticket', 'Fecha', 'Hora', 'Servicio', 'Precio', 'Cantidad', 'DTO', 'Importe']" />

    <style lang="less">
        #income {
            align-items: flex-start;
            display: grid;
            grid-template-rows: auto auto 1fr auto;
            grid-template-columns: repeat(3, 1fr);
            grid-row-gap: 5px;

            #--id_table1 {
                grid-row: 2;
                grid-column: 1 / span 3;

                table {
                    max-height: 500px;

                    th, td {
                        padding: 0;
                    }
                }
            }

            .Importe {
                text-align: right;
            }

            #--id_text3{
                grid-column: 3;

                input, label {
                    font-weight: bold !important;
                    font-size: 2rem !important; 
                }
            }
        }
    </style>
    <script>
        app.income = {
            name : 'Ingresos',
            buttons: ['print', 'filter'],
            txtFrom: --id_txt1,
            txtTo: --id_txt2,
            txtTotal: --id_txt3.querySelector('input'),
            SelUser: new MySelect('--id_sel1'),
            Table: new MyTable('--id_table1'),
            load() {
                this.loadUsers()
                this.filter()
            },
            loadUsers() {
                let el = this.SelUser
                DB.get('usuarios')
                    .then(users => {
                        for (let u of users) {
                            const discharged = (u.estado != 1) ? 'red' : null;
                            el.addOption(u.id, u.nombre, discharged)
                        }
                    })
            },
            filter() {
                this.Table.clear()
                this.getData({
                    controller: 'tickets',
                    action: 'getBetween',
                    data: {
                        f1: date.format(this.txtFrom.value, 'sql'),
                        f2: date.format(this.txtTo.value, 'sql'),
                        u: this.SelUser.value()
                    }
                })
            },
            getData(data) {
                app.post(data, (data, success) => {
                    let _loadData = d => {
                        for (let x in d.lineas) {
                            let l = d.lineas[x]
                            if (d.estado == 1) this.Table.addLine(null,
                                [
                                    d.id,
                                    date.format(d.fecha, 'short'),
                                    date.format(d.fecha, 'hour'),
                                    l.articulo,
                                    l.precio,
                                    l.cantidad,
                                    l.dto,
                                    l.importe.toFixed(2)
                                ])
                        }
                        return parseFloat(d.total)
                    }
                    if (success && data && data.id) {
                        this.txtTotal.value = _loadData(data[i]).toFixed(2)
                    } else {
                        let x = 0
                        for (let i in data) {
                            x += _loadData(data[i])
                        }
                        this.txtTotal.value = x.toFixed(2)
                    }

                })
            },
            print() {

                const printContents = {
                    innerHTML :
                        `<h1> Listado de ingresos </h1>
                        <h3> Fecha inicio   : ${this.txtFrom.value}</h3>
                        <h3> Fecha fin      : ${this.txtTo.value}</h3>

                        <table> ${this.Table.html()} </table>
                        <h4>Total: <b>${this.txtTotal.value}</b></h4>`
                };
                imprimirElemento(printContents);

            },
        }
    </script>
</section>