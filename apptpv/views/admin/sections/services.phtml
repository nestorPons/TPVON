<section id="services">
    <?php
    $table = new Table(['columns'=>['id', 'Código', 'Nombre', 'Descripcion', 'Precio'], 'class'=>'hoverable', 
    'onclick'=>'app.services.show(window.event)']);
    $abc = new ListABC($table->id());
    $form = new Modal(['body'=> \VIEWS\ADMIN\SECTIONS . 'forms/service.phtml'], false);
    ?>

</section>
<style>
    #services{
        display: grid;
        grid-template-rows: 2; 
    }

    #<?=$table->id()?>{
        max-height: 80vh ;
        grid-row: 2;
    }

</style>
<script>
'use strict'
app.services = {
    table       : 'servicios',
    buttons     : ['add', 'search'],
    currentId   : null, 
    Table       : new Table('<?=$table->idEl()?>'),
    Form        : new Modal('<?=$form->id()?>'),
    $table      : $('#<?=$table->id()?>').find('tbody'),
    // Validacion del campo codigo
    async valCode(e){
        echo('validation code ...')
        const   el = e.target, 
                value = el.value,
                ser = await DB.get('servicios', 'codigo', value).then( d => d[0])
        if(this.Form.state() == 'new'){
            // Validamos si creamos un codigo nuevo
            if(ser != undefined) el.setCustomValidity("Codigo existente")
            else el.setCustomValidity('')  
        } else {
            // Valida si editamos el codigo
            if(ser && this.Form.data.id != ser.id) el.setCustomValidity("Codigo existente")
            else el.setCustomValidity('')
        }
    },
    load(){
        DB.get(this.table)
            .then( data => {
                for( let i in data ){
                    var d = data[i]
                    // Listamos los servicios activos solamente
                    if(d.estado == 1){
                        this.Table.addLine(
                            d.id, 
                            [d.id, d.codigo, d.nombre, d.descripcion, d.precio]
                        )
                        .addClass(d.codigo[0].toLowerCase())
                        
                    }
                }
            })
        
    },
    del(){
        // Eliminamos de la bd local
        DB.get(this.table,'id', this.currentId)
            .then(d => d[0])
            .then(d => {
                d.estado = 0 
                DB.set(this.table, d, 'id', d.id)
                // Eliminamos de la tabla 
                this.Table.delLine(this.currentId)
                // Cerramos formulario
                this.Form.close()
                
                app.tpv.loadServ()
            })
    },
    add(){
        let data = {    
            id: -1,
            estado: 1
        }
        this.Form
            .state('new')
            .clear()
            .open(data)
            .setTile('Nuevo servicio o artículo')

    },
    addLine(data){
        this.Table.addLine(data.id, [data.id, data.codigo, data.nombre, data.descripcion, data.precio])
            .addClass(data.codigo[0].toLowerCase())
    },
    updateLine(data){
        this.Table.updateLine(data.id, [data.id, data.codigo, data.nombre, data.descripcion, data.precio])
            .addClass(data.codigo[0].toLowerCase())
    },
    save(data){
        data.estado = 1
        DB.set(this.table, data , 'id', data.id)

        if (this.currentId == -1 ) this.addLine(data)
        else this.updateLine(data)
        this.Form.close()

        app.tpv.loadServ()
    },
    show(e){
        this.currentId = e.path[1].attributes.idline.value
        DB.get(this.table, 'id', this.currentId)
            .then( data => this.Form.state('edit').open(data).setTile('Edicion servicio o artículo'))
    },
    async search(value){
        this.Table.hideLines()
        await this.searchBy('codigo', value) || 
        await this.searchBy('nombre', value) || 
        await this.searchBy('descripcion', value)
    },
    searchBy(field, value){
        DB.get(this.table, field, value, 'estado==1').then( d => {
            if (d){
                for(let i in d) this.Table.showLines(`[idline='${d[i].id}'`)
                return true
            }
            else return false
        })
    }
}
</script>
